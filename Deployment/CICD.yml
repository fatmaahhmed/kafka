steps:
- name: ubuntu
  args:
  - '-c'
  - >
    echo "DB_DEVELOPMENT_URL=mongodb+srv://
  id: Update ENV File
  entrypoint: bash
- name: gcr.io/cloud-builders/docker
  args:
  - build
  - '-t'
  - 'gcr.io/eyego-mvp/notification-system:$SHORT_SHA'
  - .
  id: Build Docker Image
- name: gcr.io/cloud-builders/docker
  args:
  - push
  - 'gcr.io/eyego-mvp/notification-system:$SHORT_SHA'
  id: Push Docker Image
- name: gcr.io/cloud-builders/gcloud
  args:
  - '-c'
  - >
    echo "=== Starting SSH and Deployment Setup ==="


    mkdir -p /root/.ssh

    gcloud secrets versions access latest --secret="google-cloud-key" > /root/.ssh/google-cloud-key

    chmod 600 /root/.ssh/google-cloud-key


    echo "StrictHostKeyChecking=no" > /root/.ssh/config


    ssh -i /root/.ssh/google-cloud-key -o StrictHostKeyChecking=no fatmaahmed@34.47.244.129 << 'EOF'
      echo 'Authenticated inside VM. Starting deployment process...'
      
      cd /home/fatmaahmed/app
      echo 'Working directory exists.'
      
      sudo gcloud auth configure-docker gcr.io -q
      echo 'Docker authenticated with GCR.'
      
      sudo docker pull gcr.io/eyego-mvp/notification-system:$SHORT_SHA
      sudo docker tag gcr.io/eyego-mvp/notification-system:$SHORT_SHA gcr.io/eyego-mvp/notification-system:latest
      echo 'Docker image pulled and tagged successfully.'
      
      echo 'Stopping containers...'
      sudo docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.prod.yml down
      echo 'Starting containers with new image...'
      sudo docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.prod.yml up -d
      echo 'Containers started successfully.'
      
      echo 'Cleaning up old images...'
      sudo docker images 'gcr.io/eyego-mvp/notification-system' --format '{{.ID}} {{.CreatedAt}}' | 
      sort -k 2 -r | 
      awk 'NR>1 {print $1}' | 
      xargs -r sudo docker rmi
      echo 'Old images cleaned up.'
      
      echo 'Deployment completed successfully.'
    EOF
  id: SSH and Deploy
  entrypoint: bash
